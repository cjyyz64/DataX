{
    //多版本模式的配置模板
    "reader": {
        "name": "hbasereader",
        "parameter": {
            // hbase 连接信息
            "hbase-config": {
                "hbase.zookeeper.quorum": "?",
                "hbase.zookeeper.property.clientPort": "?",
                "k3": "v3"
            },
            "table": "hbase_test_table",

            // 默认为 utf8,可以配置为 utf8,gbk
            "encoding": "utf8",

            // 可能取值为：normal, mutiVersion（这种情况，一定会去读 rowkey,这时不能在 column 中配置 rowkey；不支持常量列）
            "mode": "mutiVersion",

            "column": [
                {
                    // 表示读取列族为 basicInfo，列名称为 name 的列的数据，
                    // 编码信息为 encoding 指定
                    "name": "basicInfo:name",
                    "type": "string"
                },
                {
                    // 表示读取列族为 basicInfo，列名称为 address 的列的数据，
                    // 编码信息为 encoding 指定
                    "name": "basicInfo:address",
                    "type": "string"
                },
                {
                    // 表示读取列族为 basicInfo，列名称为 school 的列的数据，
                    // 并且直接把 hbase 的 byte 数组读出来
                    "name": "basicInfo:school",
                    "type": "bytes"
                },
                {
                    "name": "extendsInfo:age",
                    "type": "int"
                }
            ],
            "range": {
                // 执行 startRowKey 和 endRowKey 的范围，如果不指定，则表示全表读取
                "startRowkey": "\\x0001",
                "endRowkey": "\\xffff"
            },
            // 描述用户配置的 startRowkey/endRowkey 的字符串是否为二进制字符串。
            // 如果为 true, 则调用Bytes.toBytesBinary(String rowKey)把 rowkey 转换为 bytes[]
            // 如果为 false, 则调用Bytes.toBytes(String rowKey)
            "isBinaryRowkey":true
        }
    }
}